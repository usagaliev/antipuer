const tasks = [
  "–•–≤–∞—Ç–∏—Ç –∂–¥–∞—Ç—å. –í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–¥–µ—é, –∫–æ—Ç–æ—Ä—É—é –æ—Ç–∫–ª–∞–¥—ã–≤–∞–ª, –∏ —Å–¥–µ–ª–∞–π –ø–µ—Ä–≤—ã–π —à–∞–≥. (–ü—Ä–∏–º–µ—Ä: –∑–∞–≤–µ–¥–∏ –±–ª–æ–≥ –∏ –Ω–∞–ø–∏—à–∏ –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç).",
  "–í—ã–ø–∏—à–∏ 3 –∑–∞–¥–∞—á–∏ –Ω–∞ –¥–µ–Ω—å –∏ –∑–∞–∫—Ä–æ–π –∏—Ö –ª—é–±–æ–π —Ü–µ–Ω–æ–π. (–ü—Ä–∏–º–µ—Ä: –∫—É–ø–∏—Ç—å –ª–∞–º–ø–æ—á–∫—É, –ø–æ–∑–≤–æ–Ω–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç).",
  "–£–±–µ–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å—É—Ç–∫–∏. (–ü—Ä–∏–º–µ—Ä: —É–¥–∞–ª–∏ YouTube —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞).",
  "–ó–∞—Ñ–∏–∫—Å–∏—Ä—É–π –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ ‚Äî —Ä–∞—Å—Å–∫–∞–∂–∏ –∫–æ–º—É-—Ç–æ –æ –ø–ª–∞–Ω–µ. (–ü—Ä–∏–º–µ—Ä: –ø–æ–æ–±–µ—â–∞–π –¥—Ä—É–≥—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫ –¥–∞—Ç–µ).",
  "–ó–∞–∫—Ä–æ–π —Å—Ç–∞—Ä—ã–π —Ö–≤–æ—Å—Ç. (–ü—Ä–∏–º–µ—Ä: –¥–æ–¥–µ–ª–∞–π —Ä–µ–º–æ–Ω—Ç –ø–æ–ª–∫–∏, –æ—Ñ–æ—Ä–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç).",
  "–°–¥–µ–ª–∞–π –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ–µ, –Ω–æ –ø–æ–ª–µ–∑–Ω–æ–µ. (–ü—Ä–∏–º–µ—Ä: –∑–∞–ø–∏—à–∏—Å—å –∫ –≤—Ä–∞—á—É, –≤—ã–∫–∏–Ω—å —Ö–ª–∞–º).",
  "–ê–Ω–∞–ª–∏–∑. –ß—Ç–æ —Å–¥–µ–ª–∞–ª, —á—Ç–æ –º–µ—à–∞–ª–æ, –∫–∞–∫–∏–µ –±—ã–ª–∏ –æ—Ç–º–∞–∑–∫–∏.",
  "30 –º–∏–Ω—É—Ç –º–æ–Ω–æ—Ç–æ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–µ–∑ –æ—Ç–≤–ª–µ—á–µ–Ω–∏–π. (–ü—Ä–∏–º–µ—Ä: —Ä–∞—Å—Å–æ—Ä—Ç–∏—Ä—É–π —Ñ–æ—Ç–æ –∏–ª–∏ —Ñ–∞–π–ª—ã).",
  "–ù–∞—á–Ω–∏ –¥–Ω–µ–≤–Ω–∏–∫ ‚Äî 5 –º–∏–Ω—É—Ç –∑–∞–ø–∏—Å–∏. (–ü—Ä–∏–º–µ—Ä: —á—Ç–æ —Å–¥–µ–ª–∞–ª, —á–µ–º—É –Ω–∞—É—á–∏–ª—Å—è, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—à—å).",
  "2 —á–∞—Å–∞ —Ñ–æ–∫—É—Å–Ω–æ–π —Ä–∞–±–æ—Ç—ã. –ë–µ–∑ —Å–æ—Ü—Å–µ—Ç–µ–π –∏ –æ—Ç–≤–ª–µ—á–µ–Ω–∏–π.",
  "–ò–∑—É—á–∏ —á—Ç–æ-—Ç–æ –Ω—É–¥–Ω–æ–µ, –Ω–æ –ø–æ–ª–µ–∑–Ω–æ–µ. (–ü—Ä–∏–º–µ—Ä: –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫ —Å–æ—Ñ—Ç—É, –º–æ–¥—É–ª—å –∫—É—Ä—Å–∞).",
  "–ü–æ–≤—Ç–æ—Ä–∏ —É–∂–µ —Å–¥–µ–ª–∞–Ω–Ω—É—é –∑–∞–¥–∞—á—É ‚Äî —Ä–∞–¥–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è.",
  "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã. (–ü—Ä–∏–º–µ—Ä: Netflix –∏–ª–∏ –∏–≥—Ä—ã ‚Äî —Ç–æ–ª—å–∫–æ –≤–µ—á–µ—Ä–æ–º).",
  "–ê–Ω–∞–ª–∏–∑. –°–∫—É–∫–∞ —Å—Ç–∞–ª–∞ –ª–µ–≥—á–µ –∏–ª–∏ —Ç—è–∂–µ–ª–µ–µ?",
  "–ü–æ–æ–±–µ—â–∞–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫ –¥–∞—Ç–µ. (–ü—Ä–∏–º–µ—Ä: ¬´–°–¥–µ–ª–∞—é –∫ –ø—è—Ç–Ω–∏—Ü–µ¬ª).",
  "–ó–∞–ø–∏—à–∏—Å—å –Ω–∞ –∫—É—Ä—Å/—Ç—Ä–µ–Ω–∏–Ω–≥ —Å –¥–µ–¥–ª–∞–π–Ω–æ–º.",
  "–í–æ–∑—å–º–∏ –∑–∞–¥–∞—á—É, –∫–æ—Ç–æ—Ä—É—é –∂–¥—É—Ç –¥—Ä—É–≥–∏–µ/–∑–∞ –∫–æ—Ç–æ—Ä—É—é –ø–ª–∞—Ç—è—Ç.",
  "–û—Ç—á–∏—Ç–∞–π—Å—è –ø–µ—Ä–µ–¥ –∫–µ–º-—Ç–æ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ. (–ü—Ä–∏–º–µ—Ä: –ø—Ä–∏—à–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –∏–ª–∏ —Ñ–æ—Ç–æ).",
  "–ü–æ–º–æ–≥–∏ –∫–æ–º—É-—Ç–æ –¥–æ–≤–µ—Å—Ç–∏ –¥–µ–ª–æ –¥–æ –∫–æ–Ω—Ü–∞.",
  "–†–∞—Å–ø–∏—à–∏ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –Ω–∞ –º–µ—Å—è—Ü –≤–ø–µ—Ä—ë–¥ (—Å –¥–∞—Ç–∞–º–∏).",
  "–ê–Ω–∞–ª–∏–∑. –ß—Ç–æ —á—É–≤—Å—Ç–≤–æ–≤–∞–ª, –∫–æ–≥–¥–∞ –æ—Ç–º–µ–Ω–∏—Ç—å –±—ã–ª–æ –Ω–µ–ª—å–∑—è?",
  "–ù–∞—á–Ω–∏ –¥–µ–Ω—å —Å —Å–∞–º–æ–π —Å–ª–æ–∂–Ω–æ–π –∑–∞–¥–∞—á–∏.",
  "5 –º–∞–ª–µ–Ω—å–∫–∏—Ö —à–∞–≥–æ–≤ –ø–æ —Ä–∞–∑–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–∞–º.",
  "–û—Ç–∫–∞–∂–∏—Å—å –æ—Ç –∑–æ–Ω—ã –∫–æ–º—Ñ–æ—Ä—Ç–∞ –Ω–∞ –¥–µ–Ω—å. (–ü—Ä–∏–º–µ—Ä: –±–µ–∑ –∫–æ—Ñ–µ –∏–ª–∏ –±–µ–∑ —Ç–∞–∫—Å–∏).",
  "–°–¥–µ–ª–∞–π –∑–∞–¥–∞—á—É, –∫–æ—Ç–æ—Ä—É—é –¥–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∏–∑–±–µ–≥–∞–ª.",
  "–ú–∏–Ω–∏-–ø—Ä–æ–µ–∫—Ç –∑–∞ –æ–¥–∏–Ω –¥–µ–Ω—å. (–ü—Ä–∏–º–µ—Ä: –±–æ—Ç, –ø—Ä–æ—Ç–æ—Ç–∏–ø, —Ä–∞—Å—Å–∫–∞–∑).",
  "–î–µ–Ω—å –±–µ–∑ –∂–∞–ª–æ–± –∏ –æ—Ç–≥–æ–≤–æ—Ä–æ–∫.",
  "–ê–Ω–∞–ª–∏–∑. –ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –∑–∞ –º–µ—Å—è—Ü?",
  "–ü–æ–≤—Ç–æ—Ä–∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –º–µ—Å—è—Ü–∞ –∑–∞ –æ–¥–∏–Ω –¥–µ–Ω—å.",
  "–û—Ç–ø—Ä–∞–∑–¥–Ω—É–π –∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–π –Ω–æ–≤—ã–π –ø–ª–∞–Ω."
];

const quotes = [
  "üî• –î–µ–ª–æ —Å–¥–µ–ª–∞–µ—Ç —Å–µ–±—è —Ç–æ–ª—å–∫–æ —Ä—É–∫–∞–º–∏ —Ç–æ–≥–æ, –∫—Ç–æ –Ω–∞—á–∞–ª.",
  "üöÄ –ù–µ –¥—É–º–∞–π, –¥–µ–π—Å—Ç–≤—É–π. –î—É–º–∞—Ç—å –±—É–¥–µ–º –ø–æ—Ç–æ–º.",
  "üèÜ –†–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî —ç—Ç–æ –ø–æ–±–æ—á–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã.",
  "‚ö° –ö–∞–∂–¥–∞—è –æ—Ç–º–∞–∑–∫–∞ –æ—Ç–æ–¥–≤–∏–≥–∞–µ—Ç —Ç–µ–±—è –æ—Ç —Ü–µ–ª–∏.",
  "üõ† –ú–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ —Å—Ç—Ä–æ—è—Ç –±–æ–ª—å—à–∏–µ –ø–µ—Ä–µ–º–µ–Ω—ã.",
  "ü¶æ –°–µ–≥–æ–¥–Ω—è—à–Ω–µ–µ —É—Å–∏–ª–∏–µ ‚Äî –∑–∞–≤—Ç—Ä–∞—à–Ω—è—è –≥–æ—Ä–¥–æ—Å—Ç—å.",
  "üó° –î–µ–ª–∞–π —Ç–æ, —á—Ç–æ —Å—Ç—Ä–∞—à–Ω–æ, –∏ —Å—Ç—Ä–∞—Ö –∏—Å—á–µ–∑–Ω–µ—Ç.",
  "üå± –ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ —Å–∏–ª—å–Ω–µ–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è."
];

const BOT_TOKEN = process.env.BOT_TOKEN;
const CHAT_ID = process.env.CHAT_ID;
const START_DATE = process.env.START_DATE; // '2025-08-11'
const TIMEZONE = process.env.TIMEZONE || 'Asia/Bishkek';

if (!BOT_TOKEN || !CHAT_ID || !START_DATE) {
  console.error("Missing env: BOT_TOKEN, CHAT_ID, START_DATE");
  process.exit(1);
}

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –≤ –Ω—É–∂–Ω–æ–º –ø–æ—è—Å–µ
function todayInTZ(tz) {
  const now = new Date();
  const fmt = new Intl.DateTimeFormat('ru-RU', {
    timeZone: tz, year: 'numeric', month: '2-digit', day: '2-digit'
  });
  const parts = fmt.format(now).split('.');
  const d = parseInt(parts[0], 10);
  const m = parseInt(parts[1], 10);
  const y = parseInt(parts[2], 10);
  return new Date(Date.UTC(y, m - 1, d));
}

function parseYMD(s) {
  const [y, m, d] = s.split('-').map(Number);
  return new Date(Date.UTC(y, m - 1, d));
}

const start = parseYMD(START_DATE);
const today = todayInTZ(TIMEZONE);

// —Ä–∞–∑–Ω–∏—Ü–∞ –≤ –¥–Ω—è—Ö
const diffDays = Math.floor((today - start) / (1000 * 60 * 60 * 24));
let text;

if (diffDays < 0) {
  text = `–°—Ç–∞—Ä—Ç –ø–ª–∞–Ω–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ ${START_DATE}. –î–æ —Å—Ç–∞—Ä—Ç–∞ ${-diffDays} –¥–Ω.`;
} else if (diffDays < tasks.length) {
  const dayNum = diffDays + 1; // –Ω—É–º–µ—Ä–∞—Ü–∏—è —Å 1
  const quote = quotes[Math.floor(Math.random() * quotes.length)];
  text = `–î–µ–Ω—å ${dayNum}/${tasks.length}: ${tasks[diffDays]}\n\n${quote}`;
} else {
  text = "30 –¥–Ω–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω—ã. –û–±–Ω–æ–≤–∏ —Ü–µ–ª–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π!";
}

const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;
const payload = {
  chat_id: CHAT_ID,
  text,
  disable_web_page_preview: true
};

const res = await fetch(url, {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify(payload)
});

if (!res.ok) {
  const body = await res.text();
  console.error("Telegram API error:", res.status, body);
  process.exit(1);
} else {
  console.log("Message sent:", await res.json());
}
